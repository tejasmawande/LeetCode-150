/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        ListNode temp = head;
        int i = 1;

        ListNode prev = null;
        ListNode current = head;
        ListNode next = null;
        ListNode tailNode = null;

        while(left >1){
            prev = current;
            current = current.next;
            left--;
            right--;
        }
        ListNode con = prev;
        tailNode = current;
        
        //System.out.println("prev"+prev.val);

        System.out.println("tailNode"+tailNode.val);

        while(right > 0){
                next = current.next;
                current.next = prev;
                prev = current;
                current = next;
                right--;
           }

         if(con!=null){
            con.next = prev;
           }else{
            head = prev;
           }
        
        tailNode.next = current;
    return head;
        }
}
