/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     List<Double> resultList = new ArrayList<>();

    public List<Double> averageOfLevels(TreeNode root) {
        bFs(root);
        return resultList;

    }
    public void bFs(TreeNode root){
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()){
         int level = queue.size();
         long sum = 0;
        for(int i = 0; i < level; i++){
            TreeNode node = queue.poll();
            
            if(node.left != null){
                queue.add(node.left);
            }
            if(node.right != null){
                queue.add(node.right);
            }
            
            sum = sum + node.val;
        }
        double avg = (double)sum/level;
        resultList.add(avg);

        }

    }
}
