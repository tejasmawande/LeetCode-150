/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> resultList = new ArrayList<>();
        bFs(root,resultList);
        return resultList;
    }

    public void bFs(TreeNode root, List<List<Integer>> resultList){
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()){
            if(root == null) return ;
            List<Integer> result = new ArrayList<>();
            int level = queue.size();
            for(int i = 0; i < level; i++){
            
                TreeNode node = queue.poll();
                result.add(node.val);

                if(null != node.left){
                    queue.add(node.left);
                }
                if(null != node.right){
                    queue.add(node.right);
                }
            }
            resultList.add(result);
        }
    }
}
