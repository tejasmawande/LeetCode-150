class Solution {
    public int[] topKFrequent(int[] nums, int k) {

        if(nums.length == k) {
            return nums;
        } 
        
        Map<Integer,Long> map = Arrays.stream(nums)
                            .mapToObj(s->s)
                            .collect(Collectors.groupingBy(s->s, Collectors.counting()));
        System.out.println("map"+map);

        List<Integer> resultList = map.entrySet().stream()
                    .sorted((s1,s2) -> {
                        return s2.getValue().compareTo(s1.getValue());
                    })
                    .map(s->s.getKey())
                    .collect(Collectors.toList());

        List<Integer> result= new ArrayList<>();
        for(int i = 0;i< k;i++){
            result.add(resultList.get(i));
        }

        int[] ar = result.stream().mapToInt(s->s).toArray();
        return ar;
    }
}        
