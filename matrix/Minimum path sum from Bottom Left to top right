import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;


public class JavaMain  {

        public static void main(String[] args) {
                int[][] grid =  {{1,3,1},{1,5,1},{4,2,1}}; // 4->2->1->1->1
                //aproach to iterate Grid from bottom left to top right Minimum path sum
                int m = grid.length;
                int n =grid[0].length;
                int[][] dp = new int[m][n];
            
            for(int i = m-1; i>=0; i--){
                for(int j = 0; j < n; j++){
                    if(i == m-1 && j == 0){
                        dp[i][j] = grid[i][j];
                    }else if(i == m-1){
                        dp[i][j] = dp[i][j-1] + grid[i][j];
                    }else if( j == 0){
                        dp[i][j] = dp[i+1][j] + grid[i][j];
                    }else{
                        dp[i][j] = Math.min(dp[i+1][j], dp[i][j-1]) + grid[i][j];
                    }
                }
            }

            System.out.println("result"+dp[0][n-1]);
        }


    }
