class Solution {
    int p1, p2 =0;
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        if((n1 +n2)%2 ==0){
            for(int i =0; i <(n1 +n2)/2 - 1; i++){
                int temp = getMin(nums1,nums2);
            }
            return (double)(getMin(nums1,nums2)+ getMin(nums1,nums2)/2);
        }else{
            for(int i =0; i <(n1+ n2)/2; i++){
                int temp = getMin(nums1, nums2);
            }
            return getMin(nums1, nums2);
        }
    }

    public int getMin(int[] nums1, int[] nums2){
        
        if(p1 <nums1.length && p2 <nums2.length){
            if(nums1[p1] < nums2[p2]){
                return nums1[p1++];
            }else{
                return nums2[p2++];
            }
        }else if(p1 <nums1.length){
            return nums1[p1++];
        }else if(p2 < nums2.length){
            return nums2[p2++];
        }
        return -1;
    }
}
